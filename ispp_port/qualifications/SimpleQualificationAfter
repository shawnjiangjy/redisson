/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
 */

package com.huawei.it.occsafe.service.impl.qualifications;

import com.huawei.it.occsafe.common.AnonymizeUtils;
import com.huawei.it.occsafe.service.impl.qualifications.bean.QualificationsRequest;
import com.huawei.it.occsafe.service.impl.qualifications.bean.QualificationsResponse;

import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * @author pWX814460
 * @description SimpleQualificationAfter
 * @since 2022/02/10 15:32
 */
@Service
public class SimpleQualificationAfter extends AbstractQualificationAfter {
    @Override
    public List<QualificationsResponse> dealTrustList(QualificationsRequest request, List<String> trustList) {
        Map<String, String> accountHolder = request.getAccountHolder();
        List<QualificationsResponse> allTrustReponse = new ArrayList<>();
        List<QualificationsResponse> trustReponse = new ArrayList<>();
        trustList.forEach(item -> {
            QualificationsResponse qualificationsResponse = new QualificationsResponse();
            qualificationsResponse.setScenario("1");
            qualificationsResponse.setMessage("白名单用户");
            qualificationsResponse.setAccount(AnonymizeUtils.getEmployee(item));
            qualificationsResponse.setW3Account(accountHolder.get(AnonymizeUtils.getEmployee(item)));
            qualificationsResponse.setFlag(true);
            trustReponse.add(qualificationsResponse);
        });
        allTrustReponse.addAll(trustReponse);
        return allTrustReponse;
    }

    @Override
    public List<QualificationsResponse> dealAccessMember(QualificationsRequest request,
        List<QualificationsResponse> accessMember) {
        Map<String, String> accountHolder = request.getAccountHolder();
        List<QualificationsResponse> allAccessMember = new ArrayList<>();
        List<QualificationsResponse> accessMemberResponse = new ArrayList<>();
        accessMember.forEach(item -> {
            QualificationsResponse quResponse = new QualificationsResponse();
            quResponse.setScenario("6");
            quResponse.setAccount(AnonymizeUtils.getEmployee(item.getAccount()));
            quResponse.setW3Account(accountHolder.get(AnonymizeUtils.getEmployee(item.getAccount())));
            quResponse.setIsChangedPersonApply(item.getIsChangedPersonApply());
            quResponse.setFlag(true);
            accessMemberResponse.add(quResponse);
        });
        allAccessMember.addAll(accessMemberResponse);
        return allAccessMember;
    }
}
